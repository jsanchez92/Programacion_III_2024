<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>